server:
  port: 3001

#SETUP spring boot
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 150MB
  sql:
    init:
      mode: always
      data-locations: classpath:/data.sql
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  datasource:
    url: jdbc:mysql://localhost:3306/family_health
    username: hgbaodev
    password: secret
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true
    defer-datasource-initialization: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ad3121410155@gmail.com
    password: cvtw mzti ffal ceol
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 256747775927-eh8b8udql0h1ghfj9uk70rm6pg97ec67.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: "${GOOGLE_REDIRECT_URI:http://localhost:3001/api/oauth2/google/callback}"
            scope: openid, profile, email
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 10000

  kafka:
    bootstrap-servers: kafka:29092,localhost:9092
    consumer:
      group-id: email-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: com.hgbaodev.backend.dto.response.DataMailDTO
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

#SETUP spring logging
logging:
  level:
    org.springframework: INFO
    com.hgbaodev.backend: INFO

#JWT
application:
  security:
    jwt:
      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      expiration: 86400000 # 1 day in milliseconds
      refresh-token:
        expiration: 604800000 # 7 days in milliseconds

#SETUP spring openai
openai:
  api:
    key: AIzaSyCJNSKklG_4YnphbCk7S9k3tGSnlC9SGW8
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent
#SETUP swagger
swagger:
  contact-name: Hoang Gia Bao
  contact-mail: hgbaodevservice@gmail.com
  contact-url: https://hgbaodev.id.vn
  app-name: Family Health
  app-description: "Family Health is built on Spring Boot + React"
  app-version: 3.3.1
  app-license-url: https://www.apache.org/licenses/LICENSE-2.0.html
  app-license: Apache 2.0

#SETUP Cloudinary
cloudinary:
  cloud-name: dbpmgfsqf
  api-key: 426457797134772
  api-secret: -XO1BWyQTQLbtt5QdUr-K-go1yc


